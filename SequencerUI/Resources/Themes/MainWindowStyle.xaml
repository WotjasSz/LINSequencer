<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--#region Widnow bar-->
    <Style TargetType="Border" x:Key="WidnowBar">
        <Setter Property="Background" Value="#252525"/>
        <Setter Property="Padding" Value="5 0 0 0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>        
    </Style>
    <Style TargetType="Label" x:Key="TitleLabel">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="#c4c4c7"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style TargetType="Button" x:Key="WindowStateBtn">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#c4c4c7"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <!--<Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>-->
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="20"/>
        <!--To remove the default MouseOver behaviour on the Button 
        you will need to modify the ControlTemplate-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#444349"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="WindowStateCloseBtn" BasedOn="{StaticResource WindowStateBtn}">
        <Setter Property="FontSize" Value="20"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#b61523"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
        
    <!--#region Left side -->
    <!-- Menu button -->
    <Style TargetType="Grid" x:Key="NavGrid">
        <Setter Property="Background" Value="#4b4f57"/>
    </Style>
    <Style TargetType="Button" x:Key="FuncCallBtn">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#c4c4c7"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#444349"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Label -->
    <Style TargetType="Label" x:Key="ListLabel">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="#c4c4c7"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="10 5 0 5"/>
    </Style>
    
    <!-- ListView -->
    <Style TargetType="ListView" x:Key="ActiveSequenceList">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    </Style>
    <Style TargetType="ListViewItem" x:Key="SequenceListItem">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#777e8b"/>
            </Trigger>
        </Style.Triggers>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Background="{TemplateBinding Background}"                            
                            CornerRadius="4"
                            Margin="10 3 10 3">
                        <StackPanel Orientation="Horizontal"
                                    Margin="5 2">
                            <Label Content="{Binding Id}"
                                   FontSize="30"
                                   Foreground="White"
                                   Width="40"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"/>
                            <StackPanel>
                                <Label Content="{Binding Name}"
                                       Foreground="White"
                                       FontSize="18"/>
                                <Label Content="{Binding CreationDate}"
                                       Foreground="#c4c4c7"
                                       FontSize="14"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region Sequence slection -->
    <Style TargetType="StackPanel" x:Key="SequenceSelector">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Name="SlideInStoryboard">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Height" From="0" To="225" Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="SlideInStoryboard"/>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Trigger.EnterActions>
                    <BeginStoryboard Name="SlideOutStoryboard">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Height" From="225" To="0" Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="SlideOutStoryboard"/>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    
    <!--#region Add Button -->
    <Style TargetType="Button" x:Key="GenericButton">
        <Setter Property="Margin" Value="35 5 35 5"/>
        <Setter Property="Foreground" Value="#c4c4c7"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="grid">
                        <Border x:Name="border" 
                                CornerRadius="8" 
                                BorderBrush="#c4c4c7" 
                                BorderThickness="2"
                                Background="Transparent">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              TextElement.FontWeight="Bold"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#36393f"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF33962B"/>
                            <Setter Property="Foreground" Value="#FF33962B"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
</ResourceDictionary>